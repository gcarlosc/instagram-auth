<!-- PaymentBrick -->

<div id="cardPaymentBrick_container"></div>

<script>
const mp = new MercadoPago('TEST-2f87e803-eed9-4a59-90b7-c5a6ef6554f3', {
  locale: 'es'
});
const bricksBuilder = mp.bricks();

const renderCardPaymentBrick = async (bricksBuilder) => {
  const settings = {
    initialization: {
      amount: 100, // total amount to be paid
      payer: {
        email: "marca@gmail.com", // reemplazar por el email del usuario, evita solicitarlo en la vista
        customerId: '1666102147-Vr6jz04Pk43GS7',
        cardsIds: [ '1707009371209' ]
      },
    },
    customization: {
    visual: {
      style: {
        theme: "default",
      },
      texts: {
        formSubmit: "Guardar",
      },
    },
    paymentMethods: {
      creditCard: "all",
      debitCard: "all",
      bankTransfer: "all",
      onboarding_credits: "all",
      maxInstallments: 1
    },
  },
    callbacks: {
      onReady: () => {
        /*
          Callback called when Brick is ready.
          Here you can hide loadings from your site, for example.
        */
      },
      onSubmit: (formData) => {
        // callback called when clicking on the submit data button
        return new Promise((resolve, reject) => {
          fetch('/subscriptions/create_card', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(formData),
          })
            .then((response) => response.json())
            .then((response) => {
              console.log(response);
              window.location.href = '/subscriptions';
              resolve();
            })
            .catch((error) => {
              console.log('errorx',error);
              reject();
            });
        });
      },
      onError: (error) => {
        // callback called for all Brick error cases
        console.error(error);
      },
    },
  };
  window.cardPaymentBrickController = await bricksBuilder.create(
    'cardPayment',
    'cardPaymentBrick_container',
    settings,
  );
};
renderCardPaymentBrick(bricksBuilder);

</script>


